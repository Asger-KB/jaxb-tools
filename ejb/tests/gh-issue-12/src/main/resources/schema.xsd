<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xs:schema targetNamespace="urn:hl7-org:v3" xmlns:mif="urn:hl7-org:v3/mif" xmlns="urn:hl7-org:v3"
	xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
	xmlns:sdtc="urn:hl7-org:sdtc" 
	xmlns:sch="http://www.ascc.net/xml/schematron" 
	xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" jaxb:version="1.0">
	<!--
*****************************************************************************************************************
* XML schema for message type 
* Generated by XMLITS version 2.0
*
* Copyright (c) 2002, 2003, 2004, 2005 Health Level Seven. All rights reserved.
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions
*  are met:
*  1. Redistributions of source code must retain the above copyright
*     notice, this list of conditions and the following disclaimer.
*  2. Redistributions in binary form must reproduce the above copyright
*     notice, this list of conditions and the following disclaimer in the
*     documentation and/or other materials provided with the distribution.
*  3. All advertising materials mentioning features or use of this software
*     must display the following acknowledgement:
*       This product includes software developed by Health Level Seven.
*  THIS SOFTWARE IS PROVIDED BY HEALTH LEVEL SEVEN, INC. AND CONTRIBUTORS "AS IS" AND
*  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
*  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
*  ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
*  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
*  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
*  OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
*  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
*  OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
*  SUCH DAMAGE.
*
********************************************************************************************************************
	  -->
	<xs:annotation>
	  <xs:documentation>Manually edited to add SDTC Schema Extensions, July 2012</xs:documentation>
		<xs:documentation>Generated using schema builder version 2.0. Stylesheets:
RoseTreeToMIFStaticModel.xsl version: 1.1
StaticMifToXsd.xsl version 2.0</xs:documentation>
	</xs:annotation>
<xs:complexType name="InfrastructureRoot.typeId">
		<xs:complexContent>
			<xs:restriction base="II">
				<xs:attribute name="root" type="uid" use="required" fixed="2.16.840.1.113883.1.3"/>
				<xs:attribute name="extension" type="xs:string" use="required"/>
			</xs:restriction>
		</xs:complexContent>
	</xs:complexType>
	<xs:complexType name="Act">
		<xs:sequence>
			<xs:element name="realmCode" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="typeId" type="InfrastructureRoot.typeId" minOccurs="0"/>
			<xs:element name="templateId" type="II" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="id" type="II" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="statusCode" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="nullFlavor" type="NullFlavor" use="optional"/>
		<xs:attribute name="negationInd" type="bl" use="optional"/>
	</xs:complexType>
	<xs:simpleType name="uid">
    <xs:annotation>
      <xs:documentation>
            A unique identifier string is a character string which
            identifies an object in a globally unique and timeless
            manner. The allowable formats and values and procedures
            of this data type are strictly controlled by HL7. At this
            time, user-assigned identifiers may be certain character
            representations of ISO Object Identifiers ()
            and DCE
            Universally Unique Identifiers ().
            HL7 also reserves
            the right to assign other forms of UIDs (,
            such as mnemonic
            identifiers for code systems.
         </xs:documentation>
    </xs:annotation>
    <xs:union memberTypes="oid uuid ruid"/>
  </xs:simpleType>
  <xs:simpleType name="oid">
    <xs:annotation>
      <xs:documentation/>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-2](\.(0|[1-9][0-9]*))*"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="uuid">
    <xs:annotation>
      <xs:documentation/>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[0-9a-zA-Z]{8}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{4}-[0-9a-zA-Z]{12}"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="ruid">
    <xs:annotation>
      <xs:documentation/>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:pattern value="[A-Za-z][A-Za-z0-9\-]*"/>
    </xs:restriction>
  </xs:simpleType>
    <xs:complexType name="II">
    <xs:annotation>
      <xs:documentation>
            An identifier that uniquely identifies a thing or object.
            Examples are object identifier for HL7 RIM objects,
            medical record number, order id, service catalog item id,
            Vehicle Identification Number (VIN), etc. Instance
            identifiers are defined based on ISO object identifiers.
         </xs:documentation>
      <xs:appinfo>
        <sch:pattern  name="validate II">
          <sch:rule abstract="true" id="rule-II">
            <sch:report test="(@root or @nullFlavor) and not(@root and @nullFlavor)">
                     A root component is required or else the II value is NULL.
                  </sch:report>
          </sch:rule>
        </sch:pattern>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="ANY">
        <xs:attribute name="root" type="uid" use="optional">
          <xs:annotation>
            <xs:documentation>
                     A unique identifier that guarantees the global uniqueness
                     of the instance identifier. The root alone may be the
                     entire instance identifier.
                  </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="extension" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>
                     A character string as a unique identifier within the
                     scope of the identifier root.
                  </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="assigningAuthorityName" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>
                     A human readable name or mnemonic for the assigning
                     authority. This name may be provided solely for the
                     convenience of unaided humans interpreting an  value
                     and can have no computational meaning. Note: no
                     automated processing must depend on the assigning
                     authority name to be present in any form.
                  </xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="displayable" type="bl" use="optional">
          <xs:annotation>
            <xs:documentation>
                     Specifies if the identifier is intended for human
                     display and data entry (displayable = true) as
                     opposed to pure machine interoperation (displayable
                     = false).
                  </xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ANY"><!-- abstract="true">-->
    <xs:annotation>
      <xs:documentation>
            Defines the basic properties of every data value. This
            is an abstract type, meaning that no value can be just
            a data value without belonging to any concrete type.
            Every concrete type is a specialization of this
            general abstract DataValue type.
         </xs:documentation>
    </xs:annotation>
    <xs:attribute name="nullFlavor" type="NullFlavor" use="optional">
      <xs:annotation>
        <xs:documentation>
               An exceptional value expressing missing information
               and possibly the reason why the information is missing.
            </xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
  <xs:simpleType name="bl">
    <xs:annotation>
      <xs:documentation>
            The Boolean type stands for the values of two-valued logic.
            A Boolean value can be either true or
            false, or, as any other value may be NULL.
         </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:boolean">
      <xs:pattern value="true|false"/>
    </xs:restriction>
  </xs:simpleType>  
   <xs:simpleType name="NullFlavor">
      <xs:annotation>
         <xs:documentation>vocSet: D10609 (C-0-D10609-cpt)</xs:documentation>
      </xs:annotation>
      <xs:union memberTypes="NoInformation">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="NP"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:union>
   </xs:simpleType>	
   <xs:simpleType name="NoInformation">
      <xs:annotation>
         <xs:documentation>specDomain: V10610 (C-0-D10609-V10610-cpt)</xs:documentation>
      </xs:annotation>
      <xs:union memberTypes="Other Unknown">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="NI"/>
               <xs:enumeration value="MSK"/>
               <xs:enumeration value="NA"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:union>
   </xs:simpleType>
      <xs:simpleType name="Other">
      <xs:annotation>
         <xs:documentation>specDomain: V10616 (C-0-D10609-V10610-V10616-cpt)</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="OTH"/>
         <xs:enumeration value="NINF"/>
         <xs:enumeration value="PINF"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Unknown">
      <xs:annotation>
         <xs:documentation>specDomain: V10612 (C-0-D10609-V10610-V10612-cpt)</xs:documentation>
      </xs:annotation>
      <xs:union memberTypes="AskedButUnknown">
         <xs:simpleType>
            <xs:restriction base="xs:string">
               <xs:enumeration value="UNK"/>
               <xs:enumeration value="NASK"/>
               <xs:enumeration value="TRC"/>
            </xs:restriction>
         </xs:simpleType>
      </xs:union>
   </xs:simpleType>
   <xs:simpleType name="AskedButUnknown">
      <xs:annotation>
         <xs:documentation>specDomain: V10614 (C-0-D10609-V10610-V10612-V10614-cpt)</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:enumeration value="ASKU"/>
         <xs:enumeration value="NAV"/>
      </xs:restriction>
   </xs:simpleType>
</xs:schema>